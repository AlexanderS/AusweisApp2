From 8beb047fdda99325cdecfbf15b6ce3f5b5ef5ffc Mon Sep 17 00:00:00 2001
From: Kai Koehne <kai.koehne@qt.io>
Date: Thu, 7 May 2020 10:35:35 +0200
Subject: [PATCH] Port python check to configure system

Also check for py, python2, python3 executables.

Task-number: QTBUG-72926
Fixes: QTBUG-84038
Pick-to: 5.15
Change-Id: I844db4dd630d9b3025eca529ee57565b600ebbac
Reviewed-by: Joerg Bornemann <joerg.bornemann@qt.io>
---
 qtdeclarative.pro          |  8 --------
 src/3rdparty/masm/masm.pri |  4 ++--
 src/qml/configure.json     | 21 +++++++++++++++++++++
 src/qml/configure.pri      | 22 ++++++++++++++++++++++
 src/qml/qml.pro            |  6 +++++-
 5 files changed, 50 insertions(+), 11 deletions(-)
 create mode 100644 src/qml/configure.pri

diff --git x/qtdeclarative/qtdeclarative.pro y/qtdeclarative/qtdeclarative.pro
index 5b94da9b69..e924331929 100644
--- x/qtdeclarative/qtdeclarative.pro
+++ y/qtdeclarative/qtdeclarative.pro
@@ -1,10 +1,2 @@
 CONFIG += tests_need_tools examples_need_tools
 load(qt_parts)
-
-!python_available {
-    py_out = $$system('python -c "print(1)"')
-    !equals(py_out, 1): error("Building QtQml requires Python.")
-    tmp = python_available
-    CONFIG += $$tmp
-    cache(CONFIG, add, tmp)
-}
diff --git x/qtdeclarative/src/3rdparty/masm/masm.pri y/qtdeclarative/src/3rdparty/masm/masm.pri
index 0e63ac2ce5..00b5aac9f8 100644
--- x/qtdeclarative/src/3rdparty/masm/masm.pri
+++ y/qtdeclarative/src/3rdparty/masm/masm.pri
@@ -58,7 +58,7 @@ contains(DEFINES, WTF_USE_UDIS86=1) {
     udis86.output = udis86_itab.h
     udis86.input = ITAB
     udis86.CONFIG += no_link
-    udis86.commands = python $$PWD/disassembler/udis86/itab.py ${QMAKE_FILE_IN}
+    udis86.commands = $$QMAKE_PYTHON $$PWD/disassembler/udis86/itab.py ${QMAKE_FILE_IN}
     QMAKE_EXTRA_COMPILERS += udis86
 
     udis86_tab_cfile.target = $$OUT_PWD/udis86_itab.c
@@ -113,7 +113,7 @@ retgen.output = $$GENERATEDDIR/RegExpJitTables.h
 retgen.script = $$PWD/yarr/create_regex_tables
 retgen.input = retgen.script
 retgen.CONFIG += no_link
-retgen.commands = python $$retgen.script > ${QMAKE_FILE_OUT}
+retgen.commands = $$QMAKE_PYTHON $$retgen.script > ${QMAKE_FILE_OUT}
 QMAKE_EXTRA_COMPILERS += retgen
 
 # Taken from WebKit/Tools/qmake/mkspecs/features/unix/default_post.prf
diff --git x/qtdeclarative/src/qml/configure.json y/qtdeclarative/src/qml/configure.json
index 17d1f800ac..3e773651b3 100644
--- x/qtdeclarative/src/qml/configure.json
+++ y/qtdeclarative/src/qml/configure.json
@@ -23,6 +23,11 @@
                 ],
                 "qmake": "CONFIG += c++11"
             }
+        },
+        "qml-python": {
+            "label": "python",
+            "type": "detectPython",
+            "log": "location"
         }
     },
 
@@ -123,9 +128,25 @@
             "section": "QML",
             "condition": "features.thread",
             "output": [ "privateFeature" ]
+        },
+        "qml-python": {
+            "label": "python",
+            "condition": "tests.qml-python",
+            "output": [
+                "privateFeature",
+                { "type": "varAssign", "name": "QMAKE_PYTHON", "value": "tests.qml-python.location" }
+            ]
         }
     },
 
+    "report": [
+        {
+            "type": "error",
+            "condition": "!features.qml-python",
+            "message": "Python is required to build QtQml."
+        }
+    ],
+
     "summary": [
         {
             "section": "Qt QML",
diff --git x/qtdeclarative/src/qml/configure.pri y/qtdeclarative/src/qml/configure.pri
new file mode 100644
index 0000000000..2ab5f9454d
--- /dev/null
+++ y/qtdeclarative/src/qml/configure.pri
@@ -0,0 +1,22 @@
+equals(QMAKE_HOST.os, Windows): EXE_SUFFIX = .exe
+
+defineTest(qtConfTest_detectPython) {
+    PYTHON_NAMES = python$$EXE_SUFFIX python2$${EXE_SUFFIX} python3$${EXE_SUFFIX} py$${EXE_SUFFIX}
+    for (name, PYTHON_NAMES) {
+        python_path = $$qtConfFindInPath("$$name")
+        !isEmpty(python_path): \
+            break()
+    }
+    isEmpty(python_path) {
+        qtLog("No $$PYTHON_NAMES are found in PATH. Giving up.")
+        return(false)
+    }
+
+    # Make tests.python.location available in configure.json.
+    $${1}.location = $$shell_path($$python_path)
+    export($${1}.location)
+    $${1}.cache += location
+    export($${1}.cache)
+
+    return(true)
+}
diff --git x/qtdeclarative/src/qml/qml.pro y/qtdeclarative/src/qml/qml.pro
index d2170ac40b..390c9e5990 100644
--- x/qtdeclarative/src/qml/qml.pro
+++ y/qtdeclarative/src/qml/qml.pro
@@ -7,6 +7,9 @@ qtConfig(qml-network): \
 TRACEPOINT_PROVIDER = $$PWD/qtqml.tracepoints
 CONFIG += qt_tracepoints
 
+!qtConfig(qml-python): \
+    error(Python is required to build QtQml.)
+
 DEFINES   += QT_NO_URL_CAST_FROM_STRING QT_NO_INTEGER_EVENT_COORDINATES
 
 msvc:equals(QT_ARCH, i386): QMAKE_LFLAGS += /BASE:0x66000000
@@ -81,8 +84,9 @@ qtConfig(qml-animation) {
 }
 include(types/types.pri)
 include(../3rdparty/masm/masm-defs.pri)
-include(../3rdparty/masm/masm.pri)
 
 MODULE_PLUGIN_TYPES = \
     qmltooling
 load(qt_module)
+
+include(../3rdparty/masm/masm.pri)
-- 
2.26.2

